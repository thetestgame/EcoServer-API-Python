# coding: utf-8

"""
    Eco Game API

    First API draft for Eco. Heavy work in progress and subject to changes.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import ecoserver
from ecoserver.api.election_api import ElectionApi  # noqa: E501
from ecoserver.rest import ApiException


class TestElectionApi(unittest.TestCase):
    """ElectionApi unit test stubs"""

    def setUp(self):
        self.api = ecoserver.api.election_api.ElectionApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_election_add_comment(self):
        """Test case for election_add_comment

        Adds a comment to the currently running election, if any.  # noqa: E501
        """
        pass

    def test_election_finish_election(self):
        """Test case for election_finish_election

        """
        pass

    def test_election_force_election_end(self):
        """Test case for election_force_election_end

        Forces the currently running election to end now, and for the current election winner to become the leader. Can only be called by an admin or dev.  # noqa: E501
        """
        pass

    def test_election_generate_test_data(self):
        """Test case for election_generate_test_data

        Create a bunch of test elections.  # noqa: E501
        """
        pass

    def test_election_get_comments(self):
        """Test case for election_get_comments

        List comments on the election.  # noqa: E501
        """
        pass

    def test_election_get_elected_title_by_id(self):
        """Test case for election_get_elected_title_by_id

        Returns the elected title with the given id.  # noqa: E501
        """
        pass

    def test_election_get_election_by_id(self):
        """Test case for election_get_election_by_id

        Returns the election with the given id.  # noqa: E501
        """
        pass

    def test_election_list_elected_titles(self):
        """Test case for election_list_elected_titles

        Returns all elected titles and their occupants matching the given state (active by default).  # noqa: E501
        """
        pass

    def test_election_list_elections(self):
        """Test case for election_list_elections

        Returns all elections that are either active or inactive.  # noqa: E501
        """
        pass

    def test_election_vote(self):
        """Test case for election_vote

        Places a vote on behalf of the given player.  Can only be called if an election is currently running.  # noqa: E501
        """
        pass

    def test_election_votes(self):
        """Test case for election_votes

        Returns a list of votes that were made on the indicated election.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
